ENV['VAGRANT_DEFAULT_PROVIDER'] = 'vmware_fusion'
HERE = File.expand_path(File.dirname(__FILE__))

Vagrant.configure("2") do |config|
  config.vm.box = "mitchellh/boot2docker"

  config.vm.provider "virtualbox" do |v|
    # On VirtualBox, we don't have guest additions or a functional vboxsf
    # in TinyCore Linux, so tell Vagrant that so it can be smarter.
    v.check_guest_additions = false
    v.functional_vboxsf     = false
  end

  ["vmware_fusion", "vmware_workstation"].each do |vmware|
    config.vm.provider vmware do |v|
      if v.respond_to?(:functional_hgfs=)
        v.functional_hgfs = false
      end
    end
  end

  # b2d doesn't support NFS
  config.nfs.functional = false

  config.vm.provision :file do |f|
    f.source = "#{HERE}/docker_shim"
    f.destination = '/tmp/docker_shim'
  end

  config.vm.provision :file do |f|
    f.source = "#{HERE}/pipework"
    f.destination = '/tmp/pipework'
  end

  config.vm.provision :shell, :inline => <<-EOS
    if [ ! -f /usr/local/bin/docker_real ]; then
      mv /usr/local/bin/docker /usr/local/bin/docker_real
    fi

    if ! cmp -s /tmp/docker_shim /usr/local/bin/docker_shim; then
      cp /tmp/docker_shim /usr/local/bin/docker_shim
      chmod +x /usr/local/bin/docker_shim
      ln -sf /usr/local/bin/docker_shim /usr/local/bin/docker
    fi

    if ! cmp -s /tmp/pipework /usr/local/bin/pipework; then
      cp /tmp/pipework /usr/local/bin/pipework
      chmod +x /usr/local/bin/pipework
    fi
    EOS
end
